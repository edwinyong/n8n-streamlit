import streamlit as st
import pandas as pd
import altair as alt
from typing import Any, Dict, List

# Chat widget import (provided by the hosting environment)
from chat_widget import render_chat_widget

# -----------------------------------------
# Embedded report (from JSON input)
# -----------------------------------------
report: Dict[str, Any] = {
    "valid": True,
    "issues": [
        {
            "code": "pii_omitted",
            "severity": "warn",
            "message": "PII columns (user_name) omitted from output tables and charts."
        },
        {
            "code": "truncated_rows",
            "severity": "info",
            "message": "Table limited to 200 rows."
        }
    ],
    "summary": [
        "User performance analyzed for 36,831 users.",
        "Total sales: RM1,843,315.89 from 52,029 receipts and 94,087 units sold.",
        "Average sales per user: RM50.05; average units sold per user: 2.55.",
        "Most users generated no salesâ€”only a minority are active."
    ],
    "tables": [
        {
            "name": "User Performance Table",
            "columns": ["Total Receipts", "Total Sales (RM)", "Total Sold Unit"],
            "rows": [
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["2", "110.88", "6"],
                ["1", "41.09", "4"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"],
                ["0", "0", "0"]
            ]
        }
    ],
    "charts": [],
    "echo": {
        "intent": "table",
        "used": {
            "tables": ["User Performance Table"],
            "columns": ["user_name", "Total Receipts", "Total Sales", "Total Sold Unit"]
        },
        "stats": {"elapsed": 0},
        "sql_present": False
    }
}

# -----------------------------------------
# Streamlit Page Config
# -----------------------------------------
st.set_page_config(
    page_title="AI Report Viewer",
    page_icon="ðŸ“Š",
    layout="wide",
)

# -----------------------------------------
# Sidebar Chat Widget (rendered on the right side by the host widget)
# -----------------------------------------
render_chat_widget(
    title="ðŸ’¬ AI Analyst",
    system_hint="You are a data analyst AI. Use context when helpful.",
    context=report,
    sidebar=True,
)

# -----------------------------------------
# Helper utilities
# -----------------------------------------
SEVERITY_TO_ST = {
    "info": "info",
    "warn": "warning",
    "warning": "warning",
    "error": "error",
    "debug": "info",
}


def coerce_numeric_columns(df: pd.DataFrame) -> pd.DataFrame:
    # Attempt numeric conversion for columns that appear numeric
    for col in df.columns:
        if any(k in col.lower() for k in ["amount", "price", "sales", "unit", "count", "number", "receipts", "rm"]):
            df[col] = pd.to_numeric(df[col], errors="ignore")
    return df


def render_tables(tables: List[Dict[str, Any]]):
    if not tables:
        st.info("No tables found in this report.")
        return

    for i, t in enumerate(tables, start=1):
        name = t.get("name", f"Table {i}")
        cols = t.get("columns", [])
        rows = t.get("rows", [])
        df = pd.DataFrame(rows, columns=cols)
        df = coerce_numeric_columns(df)

        st.subheader(name)
        st.caption(f"Rows: {len(df):,}")
        st.dataframe(df, use_container_width=True)


def render_charts(charts: List[Dict[str, Any]]):
    if not charts:
        st.info("No charts found in this report.")
        return

    for i, c in enumerate(charts, start=1):
        chart_title = c.get("title", f"Chart {i}")
        st.subheader(chart_title)

        # Flexible data extraction
        data = None
        if isinstance(c.get("data"), list):
            data = pd.DataFrame(c["data"]) if c["data"] else pd.DataFrame()
        elif isinstance(c.get("data"), dict):
            # Support common shapes like {"values": [...]}
            if "values" in c["data"] and isinstance(c["data"]["values"], list):
                data = pd.DataFrame(c["data"]["values"]) if c["data"]["values"] else pd.DataFrame()
        elif "values" in c:
            data = pd.DataFrame(c["values"]) if isinstance(c["values"], list) else pd.DataFrame()
        if data is None:
            data = pd.DataFrame()

        ctype = (c.get("type") or "").lower()

        # Build Altair chart based on type and common encodings
        chart_obj = None
        if ctype in ("bar", "line", "area", "scatter", "pie") and not data.empty:
            # Try to infer encodings
            enc = c.get("encoding", {})
            x = enc.get("x") or (data.columns[0] if len(data.columns) > 0 else None)
            y = enc.get("y") or (data.columns[1] if len(data.columns) > 1 else None)
            color = enc.get("color") or (data.columns[2] if len(data.columns) > 2 else None)

            base = alt.Chart(data)
            if ctype == "bar" and x and y:
                chart_obj = base.mark_bar().encode(x=alt.X(x, sort=None), y=y, color=color)
            elif ctype == "line" and x and y:
                chart_obj = base.mark_line(point=True).encode(x=x, y=y, color=color)
            elif ctype == "area" and x and y:
                chart_obj = base.mark_area().encode(x=x, y=y, color=color)
            elif ctype == "scatter" and x and y:
                chart_obj = base.mark_point(filled=True).encode(x=x, y=y, color=color)
            elif ctype == "pie" and y:
                # Altair pie via arc: y used as theta if no explicit measure name provided
                measure = y
                label = x if x else (color if color else data.columns[0])
                chart_obj = base.mark_arc(innerRadius=0).encode(
                    theta=alt.Theta(field=measure, type="quantitative"),
                    color=alt.Color(label, sort=None)
                )
        else:
            # If an Altair spec is provided, try to render it
            spec = c.get("spec")
            if isinstance(spec, dict):
                try:
                    chart_obj = alt.Chart.from_dict(spec)
                except Exception:
                    chart_obj = None

        if chart_obj is not None:
            st.altair_chart(chart_obj, use_container_width=True)
        else:
            st.warning("Unable to render this chart due to missing or incompatible data/spec.")


# -----------------------------------------
# App Body
# -----------------------------------------
st.title("AI Report Viewer")

# Issues (Warnings/Info)
if report.get("issues"):
    for issue in report["issues"]:
        sev = SEVERITY_TO_ST.get(issue.get("severity", "info"), "info")
        msg = issue.get("message", "")
        if sev == "warning":
            st.warning(msg)
        elif sev == "error":
            st.error(msg)
        else:
            st.info(msg)

# Summary
summary = report.get("summary", [])
if summary:
    st.header("Summary")
    for line in summary:
        st.markdown(f"- {line}")

# Tables
st.header("Tables")
render_tables(report.get("tables", []))

# Charts
st.header("Charts")
render_charts(report.get("charts", []))

# Technical/Debug info (optional)
with st.expander("Technical details"):
    st.write({k: v for k, v in report.items() if k not in ["tables", "charts"]})

st.caption("Report viewer generated by AI. All tables are rendered via st.dataframe and charts via Altair.")
